.show-for-medium-up
  %nav.top-bar{:'data-topbar' => true}
    %ul.title-area
      %li.name
        %h1
          = link_to '/' do
            = image_tag("logo.png")
    %section.top-bar-section
      %ul.right
        %li
          %form
            %input.st-search-input{type: 'text', id: 'st-search-input'}
        %li
          %a.default.tip-left{:href => "http://www.wendycan.org", :'data-tooltip' => true, title: "WendyCan"}
            %i.fa.fa-home
      %ul.left
        %li
          %a.default{:href => "/"}
            阅台
        %li
          = link_to books_path do
            = "书籍"
.row
  .large-12.columns
    .st-result-listing#st-results-container
%script{type: 'text/javascript', src: 'http://twitter.github.com/hogan.js/builds/3.0.1/hogan-3.0.1.js'}
:javascript
  var script = document.createElement('script'); script.type = 'text/javascript'; script.async = true;
    script.src = "http://yuetai.wendycan.org/embed.js";
    var entry = document.getElementsByTagName('script')[0];
    entry.parentNode.insertBefore(script, entry);

  var resultTemplate = Hogan.compile('<div class="st-result"><h3 class="title"><a href="{{url}}" class="st-search-result-link">{{title}}</a></h3><div class="st-metadata"><span class="st-snippet">{{{body}}}</span></div></div>');
  var customRenderer = function(documentType, item) {
    var data = {
      title: item['title'],
      url: item['url'],
      body: item.highlight['body'] || item['body'].substring(0, 300)
    };
    return resultTemplate.render(data);
  };
  $('#st-search-input').swiftypeSearch({
    resultContainingElement: '#st-results-container',
    engineKey: '4-1kQC3Ly9j4isC9vDwd',
    renderFunction: customRenderer,
    perPage: 3,
    sortField: function() {
      return {page: $('#st-sort-field').val()};
    }
  });
    /** DO NOT EDIT BELOW THIS LINE **/
    // var script = document.createElement('script'); script.type = 'text/javascript'; script.async = true;
    // script.src = "//s.swiftypecdn.com/embed.js";
    // var entry = document.getElementsByTagName('script')[0];
    // entry.parentNode.insertBefore(script, entry);
